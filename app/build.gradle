plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
}

android {
    compileSdk 34

    defaultConfig {
        applicationId "com.toolbox.githubactionsplayground"
        minSdk 24
        targetSdk 34
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }
//    testOptions {
//        animationsDisabled = true
//        execution 'ANDROIDX_TEST_ORCHESTRATOR'
//    }
    namespace 'com.toolbox.githubactionsplayground'
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.4.1'
    implementation 'androidx.navigation:navigation-ui-ktx:2.4.1'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    debugImplementation 'androidx.fragment:fragment-testing:1.5.7'
//    androidTestImplementation 'androidx.test:runner:1.5.2'
//    androidTestUtil 'androidx.test:orchestrator:1.4.2'

}

task printProjectPropertyName {
    // Define a project property named 'configKey' to specify the configuration key
    def configKey = project.hasProperty('configKey') ? project.configKey : null

    doLast {
        // Check if configKey is provided
        if (configKey != null) {
            // Access the configuration dynamically using the provided key
            def value = android.defaultConfig.getProperty(configKey)
            if (value != null) {
                println "$configKey: $value"
            } else {
                println "Configuration '$configKey' not found in defaultConfig"
            }
        } else {
            println "Please specify a configuration key using '-PconfigKey=<key>'"
        }
    }
}