name: Android Emulator and Espresso Tests

on:
  pull_request:
    branches:
      - main

jobs:

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        api-level: [ 24 ]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Clean Project
        run: ./gradlew clean

      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: 11
          distribution: 'adopt'

      - name: Grant Permission for Gradlew to Execute
        run: chmod +x gradlew
        shell: bash

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          generate-job-summary: false

      - name: Setup GradleW
        run: ./gradlew
        shell: bash

      - name: List Profiles
        run: $ANDROID_HOME/cmdline-tools/latest/bin/avdmanager list device

#      - name: Gradle cache
#        uses: gradle/actions/setup-gradle@v3
#
#      - name: AVD cache
#        uses: actions/cache@v3
#        id: avd-cache
#        with:
#          path: |
#            ~/.android/avd/*
#            ~/.android/adb*
#          key: avd-${{ matrix.api-level }}

      - name: Create AVD and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          disable-animations: false
          script: echo "Generated AVD snapshot for caching."

      - name: Start Android Emulator
        uses: reactivecircus/android-emulator-runner@v2
        id: emulator-tests
        with:
          api-level: ${{ matrix.api-level }}
          force-avd-creation: false
          target: google_apis
          arch: x86_64
          profile: pixel_4a
          disable-animations: true
          script: ./gradlew connectedAndroidTest

      - name: Manual Approval
        id: approval
        if: steps.emulator-tests.outcome == 'success'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.ACTION_TOKEN }}
          script: |
            const response = await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: 'Tests have passed. Approve this step to proceed.'
              });
            
              core.setOutput('comment_id', response.data.id);              

      - name: Upload Test Reports
        uses: actions/upload-artifact@v4
        with:
          name: test-reports
          path: ${{ github.workspace }}/app/build/reports/androidTests/connected

      - name: Save Test Reports
        if: ${{ failure() }}
        uses: actions/upload-artifact@v4
        with:
          name: test-reports
          path: ${{ github.workspace }}/app/build/reports/androidTests
          retention-days: 1

      - name: Extract Failed Tests
        if: ${{ failure() }}
        id: extract_failed_tests
        run: |
          # Extract failed test names from the test report
          failed_tests=$(grep -hR "FAIL:" ${{ github.workspace }}/app/build/reports/androidTest/* | sed 's/.*\(app.*\)/\1/' | sort -u)
          echo "::set-output name=failed_tests::$failed_tests"

      - name: Add Pull Request Comment
        if: ${{ failure() }}
        uses: actions/github-script@v7
        with:
          script: |
            const artifactUrl="${{ github.workspace }}/app/build/reports/androidTests/connected"
            const failedTests = "${{ steps.extract_failed_tests.outputs.failed_tests }}";

            const comment = `
            ## 🚀 Espresso Tests - Pull Request Comment 🚀

            **Test Results:** ❌ Tests Failed
            **Build Version:** ${{ github.run_number }}
            **Device Configuration:** Pixel 4a (API 24)

            **Failed Tests:**
            ${failedTests.split('\n').map(test => `- ${test}`).join('\n')}

            **Artifacts:**
            - [Link to Test Report](${artifactUrl})

            **Action Required:**
            - Please review the test artifacts and address the test failures if necessary.

            Thank you for your attention! 🙌
            `;

            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: comment
            });