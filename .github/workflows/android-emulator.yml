name: Android Emulator Workflow

on:
  pull_request:
    branches:
      - 'main'
      - 'feature/*/master'
  workflow_dispatch:

jobs:
  run_ui_tests:
    runs-on: ubuntu-20.04
    environment: development

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Android SDK
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Build Docker Image
        run: docker build -t android-emulator .
        working-directory: ${{ github.workspace }}

      - name: View Docker Images
        run: docker images

      - name: Run Emulator in Docker Container
        run: docker run -d --name emulator-container -p 5037:5037 android-emulator

      - name: List Docker Container
        run: docker ps

      - name: Print Docker Logs for container
        run: docker logs emulator-container

      - name: Install ADB
        run: |
          sudo apt-get update
          sudo apt-get install -y android-tools-adb
        shell: bash

      - name: List Emulator(s)
        run: adb devices

      - name: Wait for Emulator
        run: |
          start_time=$(date +%s)
          while ! $ANDROID_SDK_ROOT/platform-tools/adb devices | grep -wq "emulator"; do
            current_time=$(date +%s)
            elapsed_time=$((current_time - start_time))
            if [ "$elapsed_time" -ge 1800 ]; then
              echo "Emulator did not become ready within 5 minutes. Exiting."
              exit 1
            fi
            echo "Waiting for emulator to become ready..."
            sleep 10
          done
          echo "Emulator is ready"
        shell: bash

#
#      - name: Run Espresso Tests
#        needs: wait-for-emulator
#        run: ./gradlew connectedAndroidTest

#      - name: Print Environment
#        run: |
#          echo "Available Tools:"
#          ls -l /usr/bin
#          echo "PATH: $PATH"
#
#      - name: Download and Extract Android SDK
#        run: |
#          echo "Workspace: ${{ github.workspace }}"
#          /usr/bin/wget https://dl.google.com/android/repository/sdk-tools-linux-4333796.zip
#          /usr/bin/unzip sdk-tools-linux-4333796.zip -d $HOME/android-sdk
#        env:
#          HOME: ${{ github.workspace }}
#          ANDROID_HOME: $HOME/android-sdk
#          PATH: $PATH:$ANDROID_HOME/cmdline-tools/latest/bin
#
#      - name: Print HOME Environment
#        run: |
#          echo "Home environment:"
#          ls -l $HOME
#          echo "HOME: $HOME"
#          echo "ANDROID HOME: $ANDROID_HOME"
#
#      - name: Accept Android SDK Licenses
#        run: yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses
#
#      - name: List AVD Target(s)
#        run: $ANDROID_HOME/cmdline-tools/latest/bin/avdmanager list target
#
#      - name: List Available System Images
#        run: $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --list | grep system-images
#
#      - name: Install Emulator Components
#        run: $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --install "system-images;android-25;google_apis;armeabi-v7a"
#
#      - name: Create AVD
#        run: |
#          echo "no" | $ANDROID_HOME/cmdline-tools/latest/bin/avdmanager create avd \
#          --force \
#          --name my_workflow_avd \
#          --package "system-images;android-25;google_apis;armeabi-v7a" \
#          --abi google_apis/armeabi-v7a \
#
#      - name: Start Emulator
#        run: $ANDROID_HOME/emulator/emulator -avd my_workflow_avd -no-window
