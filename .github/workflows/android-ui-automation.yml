name: Android Emulator and Espresso Tests

on:
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        api-level: [ 24, 30 ]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Clean Project
        run: ./gradlew clean

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: 'adopt'


      - name: Grant Permission for Gradlew to Execute
        run: chmod +x gradlew
        shell: bash

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          generate-job-summary: false

      - name: Setup GradleW
        run: ./gradlew
        shell: bash

      - name: List Profiles
        run: $ANDROID_HOME/cmdline-tools/latest/bin/avdmanager list device

      - name: Gradle cache
        uses: gradle/gradle-build-action@v2

      - name: AVD cache
        uses: actions/cache@v3
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-${{ matrix.api-level }}

      - name: create AVD and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: false
          script: echo "Generated AVD snapshot for caching."

      - name: Start Android Emulator
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          force-avd-creation: false
          target: google_apis
          arch: x86_64
          profile: pixel_4a
          disable-animations: true
          script: ./gradlew connectedAndroidTest

      - name: List Files in Project Directory
        if: ${{ failure() }}
        run: ls ${{ github.workspace }}

      - name: List Files in Project Directory
        if: ${{ failure() }}
        run: ls ${{ github.workspace }}

      - name: Upload Test Reports
        uses: actions/upload-artifact@v3
        with:
          name: test-reports
          path: ${{ github.workspace }}/app/build/reports/androidTests/connected

      - name: Save Test Reports
        if: ${{ failure() }}
        uses: actions/upload-artifact@v3
        with:
          name: test-reports
          path: ${{ github.workspace }}/app/build/reports
          retention-days: 1

      - name: Add Pull Request Comment
        uses: actions/github-script@v5
        with:
          script: |
            const comment = `
            ## üöÄ Espresso Tests - Pull Request Comment üöÄ

            **Test Results:** ‚ùå Tests Failed
            **Build Version:** ${GITHUB_SHA}
            **Device Configuration:** Nexus 5X (API 30)

            **Failed Tests:**
            - LoginScreenTest - Assertion failure: Username not displayed

            **Artifacts:**
            - [Link to Test Report](https://example.com/link-to-report)
            - [Screenshots](https://example.com/link-to-screenshots-folder)

            **Action Required:**
            - Please review the test artifacts and address the test failures if necessary.

            Thank you for your attention! üôå
            `;

            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: comment
            });
